 
cpldfit:  version L.70                              Xilinx Inc.
                                  Fitter Report
Design Name: cpld_ram512k_v110                   Date: 10- 7-2018, 11:11AM
Device Used: XC9536-10-PC44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
31 /36  ( 86%) 122 /180  ( 68%) 55 /72  ( 76%)   15 /36  ( 42%) 32 /34  ( 94%)

** Function Block Resources **

Function    Mcells      FB Inps     Signals     Pterms      IO          
Block       Used/Tot    Used/Tot    Used        Used/Tot    Used/Tot    
FB1          15/18       24/36       24          73/90       7/17
FB2          16/18       31/36       31          49/90       6/17
             -----       -----                   -----       -----     
             31/36       55/72                  122/180     13/34 

* - Resource is exhausted

** Global Control Resources **

Global clock net(s) unused.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   19          19    |  I/O              :    26      28
Output        :    9           9    |  GCK/IO           :     3       3
Bidirectional :    4           4    |  GTS/IO           :     2       2
GCK           :    0           0    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total     32          32

** Power Data **

There are 31 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'cpld_ram512k_v110.ise'.
INFO:Cpld:994 - Exhaustive fitting is trying pterm limit: 18 and input limit: 18
*************************  Summary of Mapped Logic  ************************

** 13 Outputs **

Signal                Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                  Pts   Inps          No.  Type    Use     Mode Rate State
ramdis                8     10    FB1_5   6    GCK/I/O O       STD  FAST 
ramadrhi<4>           11    10    FB1_9   11   I/O     I/O     STD  FAST 
ramadrhi<3>           11    9     FB1_11  13   I/O     I/O     STD  FAST 
ramadrhi<2>           10    8     FB1_13  18   I/O     O       STD  FAST 
ramadrhi<1>           6     7     FB1_14  19   I/O     O       STD  FAST 
ramwe_b               1     1     FB1_16  22   I/O     O       STD  FAST 
ramadrhi<0>           6     7     FB1_17  24   I/O     O       STD  FAST 
rd_b_aux              1     1     FB2_2   44   I/O     O       STD  FAST 
rd_b                  1     1     FB2_4   43   I/O     I/O     STD  FAST 
ramcs_b               8     12    FB2_14  28   I/O     O       STD  FAST 
ramoe_b               1     1     FB2_15  27   I/O     O       STD  FAST 
adr15_aux             1     5     FB2_16  26   I/O     O       STD  FAST 
adr15                 1     5     FB2_17  25   I/O     I/O     STD  FAST 

** 18 Buried Nodes **

Signal                Total Total Loc     Pwr  Reg Init
Name                  Pts   Inps          Mode State
$OpTx$INV$9__$INT     2     6     FB1_1   STD  
mwr_cyc_f_q           3     3     FB1_2   STD  RESET
mreq_b_q              3     3     FB1_3   STD  RESET
mreq_b_f_q            3     3     FB1_4   STD  RESET
dip_q<3>              2     2     FB1_6   STD  RESET
dip_q<2>              2     2     FB1_7   STD  RESET
clken_lat_qb          2     7     FB1_15  STD  RESET
adr15_q               3     3     FB1_18  STD  RESET
ramblock_q<5>         3     4     FB2_5   STD  RESET
ramblock_q<4>         3     4     FB2_6   STD  RESET
ramblock_q<2>         3     4     FB2_7   STD  RESET
ramblock_q<1>         3     4     FB2_8   STD  RESET
ramblock_q<0>         3     4     FB2_9   STD  RESET
mode3_q               3     6     FB2_10  STD  RESET
N0$BUF0/N0$BUF0_TRST  4     8     FB2_11  STD  
$OpTx$FX_DC$14        4     7     FB2_12  STD  
ramblock_q<3>         5     8     FB2_13  STD  RESET
mwr_cyc_q             5     9     FB2_18  STD  RESET

** 19 Inputs **

Signal                Loc     Pin  Pin     Pin     
Name                          No.  Type    Use     
iorq_b                FB1_1   2    I/O     I
clk                   FB1_3   5    GCK/I/O I
ramrd_b               FB1_4   4    I/O     I
dip<1>                FB1_6   8    I/O     I
dip<0>                FB1_7   7    GCK/I/O I
m1_b                  FB1_8   9    I/O     I
rfsh_b                FB1_10  12   I/O     I
adr14                 FB1_12  14   I/O     I
mreq_b                FB2_1   1    I/O     I
data<0>               FB2_3   42   GTS/I/O I
wr_b                  FB2_5   40   GTS/I/O I
reset_b               FB2_6   39   GSR/I/O I
data<1>               FB2_7   38   I/O     I
data<2>               FB2_8   37   I/O     I
data<3>               FB2_9   36   I/O     I
data<4>               FB2_10  35   I/O     I
data<5>               FB2_11  34   I/O     I
data<6>               FB2_12  33   I/O     I
data<7>               FB2_13  29   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X(@)         - Signal used as input (wire-AND input) to the macrocell logic.
               The number of Signals Used may exceed the number of FB Inputs
               Used due to wire-ANDing in the switch matrix.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               24/12
Number of signals used by logic mapping into function block:  24
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
$OpTx$INV$9__$INT     2       0     0   3     FB1_1   2     I/O     I
mwr_cyc_f_q           3       0     0   2     FB1_2   3     I/O     (b)
mreq_b_q              3       0     0   2     FB1_3   5     GCK/I/O I
mreq_b_f_q            3       0   \/1   1     FB1_4   4     I/O     I
ramdis                8       3<-   0   0     FB1_5   6     GCK/I/O O
dip_q<3>              2       0   /\2   1     FB1_6   8     I/O     I
dip_q<2>              2       0   \/2   1     FB1_7   7     GCK/I/O I
(unused)              0       0   \/5   0     FB1_8   9     I/O     I
ramadrhi<4>          11       7<- \/1   0     FB1_9   11    I/O     I/O
(unused)              0       0   \/5   0     FB1_10  12    I/O     I
ramadrhi<3>          11       6<-   0   0     FB1_11  13    I/O     I/O
(unused)              0       0   \/5   0     FB1_12  14    I/O     I
ramadrhi<2>          10       5<-   0   0     FB1_13  18    I/O     O
ramadrhi<1>           6       1<-   0   0     FB1_14  19    I/O     O
clken_lat_qb          2       0   /\1   2     FB1_15  20    I/O     (b)
ramwe_b               1       0   \/1   3     FB1_16  22    I/O     O
ramadrhi<0>           6       1<-   0   0     FB1_17  24    I/O     O
adr15_q               3       0     0   2     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$9__$INT   9: data<7>           17: ramblock_q<0> 
  2: ramadrhi<3>.PIN    10: dip<1>            18: ramblock_q<1> 
  3: ramadrhi<4>.PIN    11: dip_q<2>          19: ramblock_q<2> 
  4: adr15.PIN          12: dip_q<3>          20: ramblock_q<3> 
  5: adr14              13: iorq_b            21: ramblock_q<4> 
  6: adr15_q            14: mreq_b            22: ramblock_q<5> 
  7: clk                15: mwr_cyc_f_q       23: wr_b 
  8: data<6>            16: mwr_cyc_q         24: reset_b 

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
$OpTx$INV$9__$INT    ...X..XXX...X.........X................. 6       6
mwr_cyc_f_q          ......X........X.......X................ 3       3
mreq_b_q             ......X......X.........X................ 3       3
mreq_b_f_q           ......X......X.........X................ 3       3
ramdis               ...XXX...XX...XXXXX..................... 10      10
dip_q<3>             ..X....................X................ 2       2
dip_q<2>             .X.....................X................ 2       2
ramadrhi<4>          ...XXX...X.X....XXX..X.X................ 10      10
ramadrhi<3>          ...XXX...X......XXX.X..X................ 9       9
ramadrhi<2>          ...XXX...X......XXXX.................... 8       8
ramadrhi<1>          ...XXX...X......XXX..................... 7       7
clken_lat_qb         X..X..XXX...X.........X................. 7       7
ramwe_b              ......................X................. 1       1
ramadrhi<0>          ...XXX...X......XXX..................... 7       7
adr15_q              ...X.........X.........X................ 3       3
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               31/5
Number of signals used by logic mapping into function block:  31
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB2_1   1     I/O     I
rd_b_aux              1       0     0   4     FB2_2   44    I/O     O
(unused)              0       0     0   5     FB2_3   42    GTS/I/O I
rd_b                  1       0     0   4     FB2_4   43    I/O     I/O
ramblock_q<5>         3       0     0   2     FB2_5   40    GTS/I/O I
ramblock_q<4>         3       0     0   2     FB2_6   39    GSR/I/O I
ramblock_q<2>         3       0     0   2     FB2_7   38    I/O     I
ramblock_q<1>         3       0     0   2     FB2_8   37    I/O     I
ramblock_q<0>         3       0     0   2     FB2_9   36    I/O     I
mode3_q               3       0     0   2     FB2_10  35    I/O     I
N0$BUF0/N0$BUF0_TRST
                      4       0     0   1     FB2_11  34    I/O     I
$OpTx$FX_DC$14        4       0     0   1     FB2_12  33    I/O     I
ramblock_q<3>         5       0     0   0     FB2_13  29    I/O     I
ramcs_b               8       3<-   0   0     FB2_14  28    I/O     O
ramoe_b               1       0   /\3   1     FB2_15  27    I/O     O
adr15_aux             1       0     0   4     FB2_16  26    I/O     O
adr15                 1       0     0   4     FB2_17  25    I/O     I/O
mwr_cyc_q             5       0     0   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$14        12: data<3>           22: mreq_b_f_q 
  2: N0$BUF0/N0$BUF0_TRST  13: data<4>           23: mreq_b_q 
  3: adr15.PIN             14: data<5>           24: mwr_cyc_f_q 
  4: rd_b.PIN              15: dip<0>            25: mwr_cyc_q 
  5: adr14                 16: dip<1>            26: ramblock_q<0> 
  6: adr15_q               17: dip_q<2>          27: ramblock_q<1> 
  7: clk                   18: dip_q<3>          28: ramblock_q<2> 
  8: clken_lat_qb          19: m1_b              29: ramrd_b 
  9: data<0>               20: mode3_q           30: reset_b 
 10: data<1>               21: mreq_b            31: rfsh_b 
 11: data<2>              

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
rd_b_aux             .X...................................... 1       1
rd_b                 .X...................................... 1       1
ramblock_q<5>        ......XX.....X...............X.......... 4       4
ramblock_q<4>        ......XX....X................X.......... 4       4
ramblock_q<2>        ......XX..X..................X.......... 4       4
ramblock_q<1>        ......XX.X...................X.......... 4       4
ramblock_q<0>        ......XXX....................X.......... 4       4
mode3_q              ......XXXXX..................X.......... 6       6
N0$BUF0/N0$BUF0_TRST 
                     ..X.XX........X.........XXXX............ 8       8
$OpTx$FX_DC$14       ...X...........X..X.XXX.X............... 7       7
ramblock_q<3>        ......XX...XXX.X.X...........X.......... 8       8
ramcs_b              ..X.XX.........XX...X..XXXXX..X......... 12      12
ramoe_b              ............................X........... 1       1
adr15_aux            X...X.........X....X..........X......... 5       5
adr15                X...X.........X....X..........X......... 5       5
mwr_cyc_q            ...X..X...........X.XXX.X....XX......... 9       9
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$14 <= ((dip(1) AND mwr_cyc_q)
	OR (NOT dip(1) AND NOT mreq_b)
	OR (NOT mreq_b AND mreq_b_f_q AND rd_b.PIN AND m1_b)
	OR (NOT mreq_b AND mreq_b_q AND rd_b.PIN AND m1_b));


$OpTx$INV$9__$INT <= ((NOT clk)
	OR (NOT adr15.PIN AND data(7) AND data(6) AND NOT wr_b AND NOT iorq_b));








N0$BUF0/N0$BUF0_TRST <= ((dip(0) AND adr14 AND ramblock_q(2) AND NOT adr15.PIN AND 
	mwr_cyc_q)
	OR (dip(0) AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	ramblock_q(1) AND mwr_cyc_q)
	OR (dip(0) AND adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND 
	adr15_q AND mwr_cyc_q)
	OR (dip(0) AND adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN AND mwr_cyc_q));


adr15_I <= '1';
adr15 <= adr15_I when adr15_OE = '1' else 'Z';
adr15_OE <= (rfsh_b AND dip(0) AND adr14 AND mode3_q AND 
	$OpTx$FX_DC$14);


adr15_aux_I <= '1';
adr15_aux <= adr15_aux_I when adr15_aux_OE = '1' else 'Z';
adr15_aux_OE <= (rfsh_b AND dip(0) AND adr14 AND mode3_q AND 
	$OpTx$FX_DC$14);

FDCPE_adr15_q: FDCPE port map (adr15_q,adr15.PIN,NOT mreq_b,NOT reset_b,'0');

FDCPE_clken_lat_qb: FDCPE port map (clken_lat_qb,'0','0',clken_lat_qb_CLR,NOT $OpTx$INV$9__$INT);
clken_lat_qb_CLR <= (NOT adr15.PIN AND clk AND data(7) AND data(6) AND NOT wr_b AND 
	NOT iorq_b);

FDCPE_dip_q2: FDCPE port map (dip_q(2),'0','0',dip_q_CLR(2),dip_q_PRE(2));
dip_q_CLR(2) <= (NOT reset_b AND NOT ramadrhi(3).PIN);
dip_q_PRE(2) <= (NOT reset_b AND ramadrhi(3).PIN);

FDCPE_dip_q3: FDCPE port map (dip_q(3),'0','0',dip_q_CLR(3),dip_q_PRE(3));
dip_q_CLR(3) <= (NOT reset_b AND NOT ramadrhi(4).PIN);
dip_q_PRE(3) <= (NOT reset_b AND ramadrhi(4).PIN);

FDCPE_mode3_q: FDCPE port map (mode3_q,mode3_q_D,mode3_q_C,NOT reset_b,'0');
mode3_q_D <= (NOT data(2) AND data(0) AND data(1));
mode3_q_C <= (NOT clk AND NOT clken_lat_qb);

FDCPE_mreq_b_f_q: FDCPE port map (mreq_b_f_q,mreq_b,NOT clk,'0',NOT reset_b);

FDCPE_mreq_b_q: FDCPE port map (mreq_b_q,mreq_b,clk,'0',NOT reset_b);

FDCPE_mwr_cyc_f_q: FDCPE port map (mwr_cyc_f_q,mwr_cyc_q,NOT clk,NOT reset_b,'0');

FDCPE_mwr_cyc_q: FDCPE port map (mwr_cyc_q,mwr_cyc_q_D,clk,NOT reset_b,'0');
mwr_cyc_q_D <= ((NOT mreq_b AND mwr_cyc_q)
	OR (rfsh_b AND NOT mreq_b AND mreq_b_f_q AND rd_b.PIN AND m1_b)
	OR (rfsh_b AND NOT mreq_b AND mreq_b_q AND rd_b.PIN AND m1_b));


ramadrhi(0) <= ((adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN)
	OR (adr14 AND dip(1) AND NOT ramblock_q(2))
	OR (adr14 AND dip(1) AND adr15.PIN)
	OR (adr14 AND ramblock_q(2) AND ramblock_q(0) AND 
	NOT adr15.PIN)
	OR (adr14 AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	ramblock_q(1))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND adr15_q));


ramadrhi(1) <= ((adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN)
	OR (dip(1) AND adr15.PIN)
	OR (adr14 AND dip(1) AND ramblock_q(0) AND ramblock_q(1))
	OR (adr14 AND ramblock_q(2) AND ramblock_q(1) AND 
	NOT adr15.PIN)
	OR (NOT ramblock_q(2) AND NOT ramblock_q(0) AND ramblock_q(1) AND 
	adr15.PIN)
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	ramblock_q(1) AND adr15_q));


ramadrhi(2) <= ((NOT adr14 AND dip(1) AND ramblock_q(2))
	OR (adr14 AND ramblock_q(2) AND NOT adr15.PIN AND 
	ramblock_q(3))
	OR (dip(1) AND NOT ramblock_q(2) AND NOT ramblock_q(1) AND 
	NOT adr15.PIN)
	OR (NOT ramblock_q(2) AND NOT ramblock_q(0) AND ramblock_q(1) AND 
	ramblock_q(3))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN AND ramblock_q(3))
	OR (NOT adr14 AND dip(1) AND ramblock_q(0))
	OR (dip(1) AND ramblock_q(2) AND adr15.PIN)
	OR (dip(1) AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	NOT ramblock_q(1))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND adr15_q AND 
	ramblock_q(3))
	OR (dip(1) AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	ramblock_q(1) AND NOT adr15_q));


ramadrhi_I(3) <= NOT (((ramadrhi_r(4).EXP)
	OR (NOT adr14 AND NOT dip(1) AND ramblock_q(2))
	OR (NOT adr14 AND NOT dip(1) AND ramblock_q(0))
	OR (adr14 AND ramblock_q(2) AND NOT adr15.PIN AND 
	NOT ramblock_q(4))
	OR (NOT dip(1) AND NOT ramblock_q(2) AND NOT ramblock_q(1) AND 
	NOT adr15.PIN)
	OR (NOT ramblock_q(2) AND NOT ramblock_q(0) AND ramblock_q(1) AND 
	NOT ramblock_q(4))
	OR (NOT dip(1) AND ramblock_q(2) AND adr15.PIN)
	OR (NOT dip(1) AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	NOT ramblock_q(1))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND adr15_q AND 
	NOT ramblock_q(4))
	OR (NOT dip(1) AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	ramblock_q(1) AND NOT adr15_q)));
ramadrhi(3) <= ramadrhi_I(3) when ramadrhi_OE(3) = '1' else 'Z';
ramadrhi_OE(3) <= reset_b;


ramadrhi_I(4) <= ((dip_q(2).EXP)
	OR (adr14 AND ramblock_q(2) AND NOT adr15.PIN AND 
	ramblock_q(5))
	OR (NOT adr14 AND dip(1) AND ramblock_q(2) AND dip_q(3))
	OR (NOT adr14 AND dip(1) AND ramblock_q(0) AND dip_q(3))
	OR (dip(1) AND ramblock_q(2) AND adr15.PIN AND dip_q(3))
	OR (NOT ramblock_q(2) AND NOT ramblock_q(0) AND ramblock_q(1) AND 
	ramblock_q(5))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND adr15_q AND 
	ramblock_q(5))
	OR (dip(1) AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	NOT ramblock_q(1) AND dip_q(3))
	OR (dip(1) AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	ramblock_q(1) AND NOT adr15_q AND dip_q(3)));
ramadrhi(4) <= ramadrhi_I(4) when ramadrhi_OE(4) = '1' else 'Z';
ramadrhi_OE(4) <= reset_b;

FDCPE_ramblock_q0: FDCPE port map (ramblock_q(0),data(0),ramblock_q_C(0),NOT reset_b,'0');
ramblock_q_C(0) <= (NOT clk AND NOT clken_lat_qb);

FDCPE_ramblock_q1: FDCPE port map (ramblock_q(1),data(1),ramblock_q_C(1),NOT reset_b,'0');
ramblock_q_C(1) <= (NOT clk AND NOT clken_lat_qb);

FDCPE_ramblock_q2: FDCPE port map (ramblock_q(2),data(2),ramblock_q_C(2),NOT reset_b,'0');
ramblock_q_C(2) <= (NOT clk AND NOT clken_lat_qb);

FDCPE_ramblock_q3: FDCPE port map (ramblock_q(3),ramblock_q_D(3),ramblock_q_C(3),NOT reset_b,'0');
ramblock_q_D(3) <= ((NOT data(3))
	OR (dip(1) AND data(4) AND data(5) AND dip_q(3))
	OR (dip(1) AND data(4) AND NOT data(5) AND NOT dip_q(3)));
ramblock_q_C(3) <= (NOT clk AND NOT clken_lat_qb);

FDCPE_ramblock_q4: FDCPE port map (ramblock_q(4),data(4),ramblock_q_C(4),NOT reset_b,'0');
ramblock_q_C(4) <= (NOT clk AND NOT clken_lat_qb);

FDCPE_ramblock_q5: FDCPE port map (ramblock_q(5),data(5),ramblock_q_C(5),NOT reset_b,'0');
ramblock_q_C(5) <= (NOT clk AND NOT clken_lat_qb);


ramcs_b <= NOT (((rfsh_b AND adr14 AND ramblock_q(2) AND NOT adr15.PIN AND 
	NOT mreq_b)
	OR (rfsh_b AND NOT ramblock_q(2) AND NOT ramblock_q(0) AND 
	ramblock_q(1) AND NOT mreq_b)
	OR (rfsh_b AND adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN AND NOT mreq_b)
	OR (rfsh_b AND dip(1) AND NOT mreq_b AND mwr_cyc_q)
	OR (rfsh_b AND dip(1) AND NOT mreq_b AND mwr_cyc_f_q)
	OR (rfsh_b AND dip(1) AND NOT mreq_b AND dip_q(2))
	OR (rfsh_b AND adr14 AND dip(1) AND NOT ramblock_q(2) AND 
	ramblock_q(1) AND NOT mreq_b)
	OR (rfsh_b AND adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND 
	NOT mreq_b AND adr15_q)));


ramdis <= ((NOT ramblock_q(2) AND NOT ramblock_q(0) AND ramblock_q(1))
	OR (adr14 AND ramblock_q(2) AND NOT adr15.PIN)
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(0) AND 
	NOT ramblock_q(1) AND adr15.PIN)
	OR (dip(1) AND mwr_cyc_q)
	OR (dip(1) AND mwr_cyc_f_q)
	OR (dip(1) AND dip_q(2))
	OR (adr14 AND dip(1) AND NOT ramblock_q(2) AND ramblock_q(1))
	OR (adr14 AND NOT ramblock_q(2) AND ramblock_q(1) AND adr15_q));


ramoe_b <= ramrd_b;


ramwe_b <= wr_b;


rd_b_I <= '0';
rd_b <= rd_b_I when rd_b_OE = '1' else 'Z';
rd_b_OE <= N0$BUF0/N0$BUF0_TRST;


rd_b_aux_I <= '0';
rd_b_aux <= rd_b_aux_I when rd_b_aux_OE = '1' else 'Z';
rd_b_aux_OE <= N0$BUF0/N0$BUF0_TRST;

Register Legend:
 FDCPE (Q,D,C,CLR,PRE); 
 FTCPE (Q,D,C,CLR,PRE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9536-10-PC44


   --------------------------------  
  /6  5  4  3  2  1  44 43 42 41 40 \
 | 7                             39 | 
 | 8                             38 | 
 | 9                             37 | 
 | 10                            36 | 
 | 11        XC9536-10-PC44      35 | 
 | 12                            34 | 
 | 13                            33 | 
 | 14                            32 | 
 | 15                            31 | 
 | 16                            30 | 
 | 17                            29 | 
 \ 18 19 20 21 22 23 24 25 26 27 28 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 mreq_b                           23 GND                           
  2 iorq_b                           24 ramadrhi<0>                   
  3 TIE                              25 adr15                         
  4 ramrd_b                          26 adr15_aux                     
  5 clk                              27 ramoe_b                       
  6 ramdis                           28 ramcs_b                       
  7 dip<0>                           29 data<7>                       
  8 dip<1>                           30 TDO                           
  9 m1_b                             31 GND                           
 10 GND                              32 VCC                           
 11 ramadrhi<4>                      33 data<6>                       
 12 rfsh_b                           34 data<5>                       
 13 ramadrhi<3>                      35 data<4>                       
 14 adr14                            36 data<3>                       
 15 TDI                              37 data<2>                       
 16 TMS                              38 data<1>                       
 17 TCK                              39 reset_b                       
 18 ramadrhi<2>                      40 wr_b                          
 19 ramadrhi<1>                      41 VCC                           
 20 TIE                              42 data<0>                       
 21 VCC                              43 rd_b                          
 22 ramwe_b                          44 rd_b_aux                      


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9536-10-PC44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : ON
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
FASTConnect/UIM optimzation                 : ON
Local Feedback                              : ON
Pin Feedback                                : ON
Input Limit                                 : 18
Pterm Limit                                 : 18
