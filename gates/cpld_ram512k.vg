//
// Gate level netlist for simulation to represent 74 series version of the
// RAM expansion board. To be simulated directly vs the RTL and cpld versions
// of the code.
//

module cpld_ram512k ( adr15, adr14, iorq_b, mreq_b, ramrd_b, reset_b, wr_b, 
        datain, ramdis, ramcs_b, ramoe_b, ramwe_b, ramadrhi );
  input [7:0] datain;
  output [4:0] ramadrhi;
  input adr15, adr14, iorq_b, mreq_b, ramrd_b, reset_b, wr_b;
  output ramdis, ramcs_b, ramoe_b, ramwe_b;
  wire   blocksel_w, blocksel_n, ramblock_q_2_, ramblock_q_1_, ramblock_q_0_, n18, n19,
         n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35;

  # Hex posedge triggered D-FF with clear*  74HCT174
  DFFR U0_0 ( .d(datain[0]), .phi(blocksel_w), .resetb(reset_b), .q(ramblock_q_0_) );
  DFFR U0_1 ( .d(datain[1]), .phi(blocksel_w), .resetb(reset_b), .q(ramblock_q_1_) );
  DFFR U0_2 ( .d(datain[2]), .phi(blocksel_w), .resetb(reset_b), .q(ramblock_q_2_) );
  DFFR U0_3 ( .d(datain[3]), .phi(blocksel_w), .resetb(reset_b), .q(ramadrhi[2]) );
  DFFR U0_4 ( .d(datain[4]), .phi(blocksel_w), .resetb(reset_b), .q(ramadrhi[3]) );
  DFFR U0_5 ( .d(datain[5]), .phi(blocksel_w), .resetb(reset_b), .q(ramadrhi[4]) );  

  # Quad NAND2 74HCT00
  NAND2 U1_0 ( .i0(n22), .i1(n19), .o(ramadrhi[0]) );
  NAND2 U1_1 ( .i0(ramblock_q_0_), .i1(n21), .o(n23) );
  NAND2 U1_2 ( .i0(ramblock_q_1_), .i1(n25), .o(n20) );
  NAND2 U1_3 ( .i0(n23), .i1(n20), .o(ramadrhi[1]) );

  # Quad NAND2 74HCT00
  NAND2 U2_0 ( .i0(adr15), .i1(n23), .o(n24) );
  NAND2 U2_1 ( .i0(n27), .i1(n26), .o(n31) );
  NAND2 U2_2 ( .i0(n32), .i1(n31), .o(ramwe_b) );
  NAND2 U2_3 ( .i0(n31), .i1(n29), .o(ramcs_b) );

  # Quad NAND2 74HCT00
  NAND2 U3_0 ( .i0(ramrd_b), .i1(n28), .o(n29) );
  NAND2 U3_1 ( .i0(n32), .i1(n32), .o(n28));
  NAND2 U3_2 ( .i0(ramblock_q_0_), .i0(ramblock_q_0_), .o(n22) );
  NAND2 U3_3 ( .i0(ramblock_q_2_), .i0(ramblock_q_2_), .o(n21) );

  # Triple NAND3 74HCT10
  NAND3 U4_0 ( .i0(ramblock_q_1_), .i1(adr14), .i2(n21), .o(n19) );
  NAND3 U4_1 ( .i0(ramblock_q_1_), .i1(n22), .i2(n21), .o(n27) );
  NAND3 U4_2 ( .i0(n25), .i1(adr14), .i2(n24), .o(n26) );

  # Triple NOR3 74HCT27
  NOR3 U5_0 ( .i0(ramdis), .i1(ramdis), .i2(ramdis), .o(ramoe_b) );  
  NOR3 U5_1 ( .i0(adr15), .i1(wr_b), .i2(iorq_b), .o(n18) );
  NOR3 U5_2 ( .i0(blocksel_n), .o(blocksel_w)));

  # Triple NAND3 74HCT10
  NAND3 U6_0 ( .i0(datain[7]), .i1(datain[6]), .i2(n18), .o(blocksel_n) );
  NAND3 U6_1 ( .i0(n27), .i1(n26), .i2(n26), .o(n35) );
  NAND3 U6_2 ( .i0(n35), .i1(n35), .o(n33) );

  # Quad NOR2 74HCT02
  NOR2 U7_0 ( .i0(mreq_b), .i1(wr_b), .o(n32) );  
  NOR2 U7_1 ( .i0(ramblock_q_2_), .i1(adr15), .o(n34) );
  NOR2 U7_2 ( .i0(n34), .i1(n34), .o(n25));
  NOR2 U7_3 ( .i0(n33), .i1(ramrd_b), .o(ramdis) );



endmodule

